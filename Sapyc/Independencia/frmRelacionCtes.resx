<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADgAA
        ACUAAAAsAAAAGQAAAAQAAAABAAAAAAAAAAAAAAAAAAAACQAAABEAAAAOAAAAAQAAAAAAAAALAAAAEQAA
        AA0AAAABAAAAAAAAAAAAAAAAAAAAAwAAAA8AAAARAAAACAAAAAAAAAAAAAAAAAAAAAsAAAARAAAADAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgAAABbAAAAvAAAAOEAAADnAAAA0gAAAIsAAAAcAAAAAQAAAAEAAAAAAAAAaQAAAMoAAACrAAAAEwAA
        AAMAAAB0AAAAygAAAKgAAAARAAAAAAAAAAAAAAAAAAAAKAAAAL0AAADIAAAATwAAAAAAAAACAAAABAAA
        AIgAAADKAAAAkgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AA8AAAAIAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AFQAAADwAAAA8wAAAKkAAACTAAAA4gAAAPgAAACpAAAACgAAAAIAAAABAAAAgQAAAPkAAADSAAAAFgAA
        AAAAAAAAAAAAAAAAAA0AAAC+AAAA+QAAAO4AAAD6AAAAiQAAAAIAAAACAAAADwAAAJUAAACyAAAAtAAA
        AOMAAAD7AAAA6AAAALUAAACyAAAAmwAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAAACEAAAA6wAAAPkAAAD6AAAA9wAAAMgAAAA0AAAAAQAAAAEAAAAAAAAAgAAA
        APcAAADRAAAAFgAAAAAAAAAAAAAAAAAAAAIAAACHAAAA+QAAAPcAAADyAAAATQAAAAEAAAACAAAAFQAA
        ANAAAAD4AAAA+QAAAPoAAAD6AAAA+wAAAPkAAAD4AAAA2AAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAJAAAAQwAAAH8AAACMAAAAZgAAAB8AAAACAAAAAAAA
        AAAAAAAAAAAAMgAAAGAAAABRAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAYAAAAGAAAABaAAAAEgAA
        AAAAAAAAAAAACAAAAFAAAABgAAAAYAAAAGEAAABhAAAAYQAAAGAAAABgAAAAUwAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAACAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3eY4AtHSJALd4
        jQK0dIljtXWK9LV2i/y1dov+tXeL/rV3i/61dYr+nkln/ZEvUv6TM1X+ljtb/ZpDYvyeTGn9o1Rv/adb
        df2rY3v+rmqB/rJxhv62d4z9uX2R/ryClf2/h5n8wYqd+MKLnXvAiJsEwoudAL6FmAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC4eo8AsW+FAbd5jhaycIbFsW+F/LJvhv2xcIb+sXCG/rJwhv6tZn7+lDVX/ZEvUv6SM1X9ljtb+5pD
        YuabRWPkmkJh+5pBYfycRWP+oU9r/qpgef60c4n+uX2R/ryClf2/h5r9wYqd/MGKnNe/h5ojwYudAb6G
        mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC3eY4Ar2qBAbd6jk+va4LzrmiA/K5pgP6uaYD+rmmA/65pgf6kVnH+kTBS/ZEv
        UvySM1Xsljtbj5lBXzGTM1UskC9Sh5AuUeiQLlH8kC9S/pIyVP6aQmH9rWV+/7uAlP2/h5r9wYqd/MGJ
        nPi+hZhnwImbAb6GmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3eo4As3GIA7h6j5GsZX38qmF6/apiev6qYnv+qmJ7/qpi
        e/6fTGn+kS9S/JEvUuWRMVRelDdYCJg+XgKbRGIClDZXB5AuUVCQL1HbkS9S+5EvUv2RL1L9kzRW/qZY
        c/69g5b9wYqd/cCJm/y9hJeqvIOWB72FmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5fZEAt3iODLl9kcCrY3z8plp0/aZa
        dP6mWnT+plt0/qdbdf6dR2X8kS9S8JEvUmaRL1IFlTdYAplBYACSMlQAkS9SAZEwUwSSMlRNkzRW5pM0
        VvyTM1b9kzRW/pQ2V/2oW3b9wIia/cCIm/y8gpbTu4CUF72ElwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7gZUBuHqPG7p/
        k9muaH/8olJu/aJTbv6iU27/olNu/qJUb/2cR2T8kS9SoZIyVAyRMFMCkzVWAJEwUwCRL1IAkC5RAJM1
        VgGUNlcGljxbhJc9XPqXPFz9lzxc/pc8XP2ZP1/9sm6F/b+Hmvy8gZXnun6TK72ElwEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC8gpUBuHuQJbp/k+S1dYv9oE5q/Z5LaP6eS2j+nkto/p5MaP2cR2XxlDZYQ5c8XAKRMVMAkS9SAJEv
        UwAAAAAAkjFUAJc9XQCWO1sCmUFgL5tEY+abRWP9m0Ri/ptEYv2bRGL9olBt/bt/k/27gJTwuX2ROLyD
        lgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC8gpUBuX2SJLuAlOK9g5f8p1p1/ZpCYf6aQmH+mkJh/ppDYv2aQ2LzmUFgTpU4
        WQKXPl0AkTBTAJAvUQCSMFQAkS5RAJAuUQCYPV0CkjJUOpxFZOufTWr9n01p/p9Maf2fTGn9n01p/bFt
        hPy7gJPvuXyQN7yClgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9g5YBun+TGLuBlNW/h5n8uXuQ/ZxFY/6WOlv/ljpb/pY7
        W/2WO1v8ljpbsJQ3WBGTNFUCkC9RAJEwUwCRMFMAlDdYAJExUwKSMlQNkC9SoJtDYvyjVXD9o1Rv/qNU
        b/6jVG/+o1Rv/apievy6fpLluHuQKLp/kwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9g5YAu4CUCryClbm/iJr8wYqc/bFs
        hP6WOlv+kjJV/pIyVf6SMlX9kjJV9ZExVH2QL1IKkTBTApM1VgGZQmABlThZApEwUgeRL1JskC9S8ZtD
        YvynXXb9p1x2/qdcdv6nXHX+p1t1/algefy4e4/NuHqPFLZ3jQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9hJcAvoWYAr2D
        lobAiJv7wYud/b+Gmf6vaYH+lzxc/pEvUv6RL1L+kC9R/JAuUu+QL1GCkTFTFZpCYAKYPV0ClThZDZIy
        VWyRL1LpkS9S/J1IZv6rZHz9q2R8/qtjfP2rY3z9q2J7/axlffy3eI2ftXaMBbV0igAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9hZgAwYqdAb6FmEPAiZvvwYud/L+Imv28g5b+s3KI/6JQbP6WOVn+kTFT/ZAvUvyQLlH2kS9St5M1
        VlOZQmBLlzxcppM0VvGRL1L8kS9S/qNTb/6va4L9rmuC/69rgv2vaoH9rmqB/K9rgvW2d41ZsG2EAbV2
        jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC9hJYAwYudAb+Hmg/Bipy3wYud+7+Imv28g5b+uX2S/rZ3jP6uaoH+plp0/aFP
        a/6eSWf9nUhm/Z1IZfSbRWP0lz1c/ZM0VvyRL1L+kzRW/qxlff6ycYf9snGH/rJxh/2ycYf9snCG/LJx
        hsm2d4wZsnCGAbZ3jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+hJgAwoydAMCImwHBi51QwYqd7r+Hmvy8g5b+uX2R/rZ4
        jP6ycYf+r2uC/atkfP6nXHb+o1Vw/p9NafybRGP9lzxc/ZM0Vv2RL1L+nkln/rV2i/62eIz9tniM/rZ3
        jP22d4z8tXaL9LV1imW2eIwCtXWKALV2iwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwoyeAMGJnAHBi50KwYqclL+H
        mvm8gpb8uX2R/rZ3jP6ycYf+rmqB/atjfP6nW3X+o1Rv/p9Maf2aRGL+lzxc/pMzVv2VOFn+sW2E/rl+
        kv65fZH9un6S/rl9kfy5fZH6uHuQqbd5jhG4e5ABtnaMALZ3jQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwoyeAMGJ
        nAC/iJoBwImbHb+Gmba8gpX6uX2R/LZ3jP6ycYf+r2qB/atjfP6nW3X/o1Rv/59Maf6bRGL/lzxc/5Y4
        Wv6sY33+vIKW/r2Dlv69g5b9vYOW/LyClvq8gZXGun+TKLh7kAG6f5MAtHSJAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwo2eAMGJnAC/h5oAv4aZAr6Elya7gZS1uXyQ+LZ3jPyycIb9r2qB/atje/6nW3X+o1Nv/p9M
        af2bRGL+m0Rj/q9ogP2+hpn+v4ia/sCIm/3AiJr8wIea+r+HmcS9hZgyu4CUAruAlAC4eo8AtneMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMGJnAC+hpkAv4aZALyDlgK6f5McuHuPkrV2i+2ycIb7rmmB/Kpi
        e/2nW3X9o1Nv/qBPa/2mWXT+t3iO/sGJnPzBi539wYud/cKLnfvBi53xwYqcosCJmyW+hJcCvYKWALuA
        lAC6f5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9hZgAu4KVAL2ElwC6fpIBtniNCrV1
        ikyycYezsG2D7a1nf/usZH39rmiA/bV1i/y9g5b9v4aZ/b+HmvzAiJr7wImb8MGKnL3Bi51ZwYudDr+H
        mgG+hZgAvYSXAL6FmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuoCTALh8
        kAC6f5MAuHyQAbZ4jQK3eo4NuHqPP7h7j4G5fZG0un+T0bt/k9u7gJPcu4GU0ryClbi8g5aHvYSYR7+H
        mRHAiZsCwYmcAcCJmwDAiZsAwYmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALh6jgC0c4kAtniMALV1igGyb4YBrmmBAa9qggK2d4wJt3mOFbh7kBy5fZEcun6TFruA
        lAq+hpkCwYudAcKLnQHBi54BwoyeAMKMngDCjJ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAt3mOALh8kAC4fJAAuHuPAbh7jwG6fZIBvIGUAbyC
        lQG8gpYBvIOWAb2DlwG9hJcBvYWYAb+GmQC+hpkAv4eZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////wPnPnj/////AcIcOP/
        ///4AQBwgf////AAAACB////8AAAAIH////wAAAAgP////gAAACA////+AAAAID////4AAABgP////AE
        BAGA////8AAEAQB////wAAwBAH////AADgAAP///+AEOAAA////4Bw8GAD////wPn48Af////h+fDwB/
        /////+AH////////gAH///////8AAP///////gAAP//////8AAAf//////gAAB//////8AAAD//////g
        AAAH/////+AAAAf/////wAAAA//////AAAAD/////8AAAAP/////wAGAA/////+AA8AB/////4AH4AH/
        ////gAfgAf////+AA8AB/////8AAAAP/////wAAAA//////AAAAD/////8AAAAP/////4AAAB//////g
        AAAH//////AAAA//////+AAAH//////8AAA///////4AAH///////wAA////////gAH////////gB///
        //8=
</value>
  </data>
</root>